[env]
IMAGE_NAME = "template"

[tasks.all]
dependencies = ["IMAGE_ISO"]

[tasks.all-hdd]
dependencies = ["IMAGE_HDD"]

[tasks.run]
dependencies = ["IMAGE_ISO"]
script = "qemu-system-x86_64 -M q35 -m 2G -cdrom ${IMAGE_NAME}.iso -boot d"

[tasks.run-uefi]
dependencies = ["ovmf", "IMAGE_ISO"]
script = "qemu-system-x86_64 -M q35 -m 2G -bios ovmf/OVMF.fd -cdrom ${IMAGE_NAME}.iso -boot d"

[tasks.run-hdd]
dependencies = ["IMAGE_HDD"]
script = "qemu-system-x86_64 -M q35 -m 2G -hda ${IMAGE_NAME}.hdd"

[tasks.run-hdd-uefi]
dependencies = ["ovmf", "IMAGE_HDD"]
script = "qemu-system-x86_64 -M q35 -m 2G -bios ovmf/OVMF.fd -hda ${IMAGE_NAME}.hdd"

[tasks.ovmf]
condition = { files_not_exist = ["ovmf"] }
script = [
	"mkdir -p ovmf",
	"cd ovmf && curl -Lo OVMF.fd https://retrage.github.io/edk2-nightly/bin/RELEASEX64_OVMF.fd"
]

[tasks.set-vars]
script_runner = "@duckscript"
script = '''
set_env MAKEFLAGS "${MAKEFLAGS} -rR"

if is_empty ${HOST_CC}
    set_env HOST_CC "cc"
end
if is_empty ${HOST_CFLAGS}
    set_env HOST_CFLAGS "-g -O2 -pipe"
end
if is_empty ${HOST_CPPFLAGS}
    set_env HOST_CPPFLAGS ""
end
if is_empty ${DEFAULT_HOST_LDFLAGS}
    set_env DEFAULT_HOST_LDFLAGS ""
end
if is_empty ${HOST_LIBS}
    set_env HOST_LIBS ""
end
'''

[tasks.limine]
dependencies = [ "set-vars", "fetch-limine" ]
script = [
	"""make ${MAKEFLAGS} -C limine \
		CC=\"${HOST_CC}\" \
		CFLAGS=\"${HOST_CFLAGS}\" \
		CPPFLAGS=\"${HOST_CPPFLAGS}\" \
		LDFLAGS=\"${HOST_LDFLAGS}\" \
		LIBS=\"${HOST_LIBS}\""""
]

[tasks.fetch-limine]
condition = { files_not_exist = ["limine"] }
script = "git clone https://github.com/limine-bootloader/limine.git --branch=binary --depth=1"

[tasks.kernel]
script = "cd kernel && cargo make all"

[tasks.IMAGE_ISO]
dependencies = ["limine", "kernel"]
script = [
    "rm -rf iso_root",
	"mkdir -p iso_root",
	"""cp -v kernel/kernel \
		limine.cfg limine/limine-bios.sys limine/limine-bios-cd.bin limine/limine-uefi-cd.bin iso_root/""",
	"mkdir -p iso_root/EFI/BOOT",
	"cp -v limine/BOOTX64.EFI iso_root/EFI/BOOT/",
	"cp -v limine/BOOTIA32.EFI iso_root/EFI/BOOT/",
	"""xorriso -as mkisofs -b limine-bios-cd.bin \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		--efi-boot limine-uefi-cd.bin \
		-efi-boot-part --efi-boot-image --protective-msdos-label \
		iso_root -o ${IMAGE_NAME}.iso""",
	"./limine/limine bios-install ${IMAGE_NAME}.iso",
	"rm -rf iso_root"
]

[tasks.IMAGE_HDD]
dependencies = ["limine", "kernel"]
script = [
    "rm -f ${IMAGE_NAME}.hdd",
    "dd if=/dev/zero bs=1M count=0 seek=64 of=${IMAGE_NAME}.hdd",
	"sgdisk ${IMAGE_NAME}.hdd -n 1:2048 -t 1:ef00",
	"./limine/limine bios-install ${IMAGE_NAME}.hdd",
	"mformat -i ${IMAGE_NAME}.hdd@@1M",
	"mmd -i ${IMAGE_NAME}.hdd@@1M ::/EFI ::/EFI/BOOT",
	"mcopy -i ${IMAGE_NAME}.hdd@@1M kernel/kernel limine.cfg limine/limine-bios.sys ::/",
	"mcopy -i ${IMAGE_NAME}.hdd@@1M limine/BOOTX64.EFI ::/EFI/BOOT",
	"mcopy -i ${IMAGE_NAME}.hdd@@1M limine/BOOTIA32.EFI ::/EFI/BOOT"
]

[tasks.clean]
script = [
    "rm -rf iso_root ${IMAGE_NAME}.iso ${IMAGE_NAME}.hdd",
    "cd kernel && cargo make clean"
]

[tasks.distclean]
dependencies = ["clean"]
script = [
    "rm -rf limine ovmf",
    "cd kernel && cargo make distclean"
]